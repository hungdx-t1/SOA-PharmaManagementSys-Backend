import express from "express";
import { db } from "../db.js";
import { verifyToken, isAdmin } from "./authMiddleware.js";

const router = express.Router();

// üßæ L·∫•y danh s√°ch t·∫•t c·∫£ danh m·ª•c thu·ªëc
router.get("/", verifyToken, async (req, res) => {
  try {
    const [rows] = await db.query("SELECT * FROM categories ORDER BY id DESC");
    res.json(rows);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch danh m·ª•c" });
  }
});

// ‚ûï Th√™m danh m·ª•c m·ªõi (ch·ªâ admin)
router.post("/", verifyToken, isAdmin, async (req, res) => {
  try {
    const { name, description } = req.body;
    if (!name) return res.status(400).json({ message: "Thi·∫øu t√™n danh m·ª•c" });

    await db.query("INSERT INTO categories (name, description) VALUES (?, ?)", [
      name,
      description || null,
    ]);
    res.json({ message: "ƒê√£ th√™m danh m·ª•c m·ªõi" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "L·ªói khi th√™m danh m·ª•c" });
  }
});

// ‚úèÔ∏è C·∫≠p nh·∫≠t danh m·ª•c (ch·ªâ admin)
router.put("/:id", verifyToken, isAdmin, async (req, res) => {
  try {
    const { name, description } = req.body;
    await db.query("UPDATE categories SET name = ?, description = ? WHERE id = ?", [
      name,
      description || null,
      req.params.id,
    ]);
    res.json({ message: "C·∫≠p nh·∫≠t danh m·ª•c th√†nh c√¥ng" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t danh m·ª•c" });
  }
});

// üóëÔ∏è X√≥a danh m·ª•c (ch·ªâ admin)
router.delete("/:id", verifyToken, isAdmin, async (req, res) => {
  try {
    await db.query("DELETE FROM categories WHERE id = ?", [req.params.id]);
    res.json({ message: "ƒê√£ x√≥a danh m·ª•c" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "L·ªói khi x√≥a danh m·ª•c" });
  }
});

export default router;
